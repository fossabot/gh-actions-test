name: 'CMake build'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.image }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
            # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2022-Readme.md
            name: "Windows MSVC",
            os: "Windows",
            image: windows-latest,
            cmake_preset: "windows-msvc-release",
            cxx: "cl",
            vc_vars: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat",
          }
        - {
            name: "Ubuntu GCC 11",
            os: "Linux",
            image: ubuntu-22.04,
            cmake_preset: "linux-gcc-release",
            cxx: "g++",
          }
        - {
            name: "Ubuntu Clang 14",
            os: "Linux",
            image: ubuntu-22.04,
            cmake_preset: "linux-clang-release",
            cxx: "clang++",
          }
        - {
            name: "macOS Clang",
            os: "macOS",
            image: macos-latest,
            cmake_preset: "macos-clang-release",
            cxx: "clang++",
          }

    steps:

    - name: Print Github event
      run: |
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}

    - name: Install basic dependencies on Ubuntu
      if: startsWith(matrix.config.image, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y cmake ninja-build ccache g++-11 clang-14

    - name: Install basic dependencies on Windows
      if: startsWith(matrix.config.image, 'windows')
      # see [GitHub Actions default shell on Windows runners is changing to PowerShell](
      #  https://github.blog/changelog/2019-10-17-github-actions-default-shell-on-windows-runners-is-changing-to-powershell/)
      # hence use [Pscx - PowerShell Community Extensions](https://github.com/Pscx/Pscx)
      #   Install-Module Pscx -Scope CurrentUser
      #   Invoke-BatchFile "${{ matrix.config.vc_vars }}"
      # but results into: "WARNING: User declined to install module (Pscx)."
      shell: cmd
      run: |
        choco install ninja cmake
        ninja --version
        cmake --version
        call "${{ matrix.config.environment_script }}"
        echo PATH=%PATH% >> %GITHUB_ENV%
        echo INCLUDE=%INCLUDE% >> %GITHUB_ENV%
        echo LIB=%LIB% >> %GITHUB_ENV%
        echo LIBPATH=%LIBPATH% >> %GITHUB_ENV%

    - name: Install basic dependencies on macOS
      if: startsWith(matrix.config.image, 'macos')
      run: |
        brew install cmake ninja
        ninja --version
        cmake --version

    - name: Install conan package manager
      run: |
        python -m pip install --upgrade pip
        pip --disable-pip-version-check --no-cache-dir install wheel conan

    - name: Create conan's default profile
      run: |
        conan profile new --detect --force default
        # enforce new CXX11 ABI
        conan profile update settings.compiler.cppstd=20 default

    - name: Specify conan's default profile for Clang compiler
      if: matrix.cxx == 'clang++'
      run: |
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan profile update settings.compiler=clang

    - name: Specify conan's default profile for GNUC++ compiler
      if: matrix.cxx == 'g++'
      run: |
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan profile update settings.compiler=g++

    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build dependencies with conan
      run: |
        conan install ${{ github.workspace }} --remote conancenter --build missing --profile default

    - name: Setup ccache Compiler Cache
      if: startsWith(matrix.config.image, 'ubuntu')
      uses: hendrikmuhs/ccache-action@v1.2.2

    - name: CMake configuration
      run: |
        cmake --preset ${{ matrix.config.cmake_preset }}

    - name: CMake Build
      run: |
        cmake --build --preset ${{ matrix.config.cmake_preset }}

    - name: Run Unit Test
      run: |
        ctest --preset ${{ matrix.config.cmake_preset }}

    - name: Clean up conan build & sources
      run: |
        conan remove -f "*" --builds
        conan remove -f "*" --src
