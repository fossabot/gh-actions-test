name: 'CMake build'

on:
  push:
    branches: [  main  ]
  pull_request:
    branches: [  main  ]
  workflow_dispatch:

env:
  CONAN_V2_MODE : 1
  # GitHub actions automatically zstd compresses caches
  CCACHE_NOCOMPRESS : true
  # 3GB; 10GB total for 4 compile jobs and conan data
  CCACHE_MAXSIZE : 3G  
  SCCACHE_CACHE_SIZE : 3G

jobs:

  # ---------------------------------------------------------------------------
  Linux:
    name: Linux ${{ matrix.config.compiler }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image:    [ ubuntu-22.04 ]
        os:       [ linux ]
        config:
        - {
            compiler: "clang",
          }
        - {
            compiler: "gcc",
          }
 
    env:
      CMAKE_PRESET : ci-${{ matrix.os }}-${{ matrix.config.compiler }}

    steps:

    - name: Install basic dependencies
      # fail-safe check, only Ubuntu this days
      if: startsWith(matrix.image, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y cmake ninja-build ccache g++-11 clang-14

    - name: Install conan package manager
      run: |
        python -m pip install --upgrade pip
        pip --disable-pip-version-check --no-cache-dir install wheel conan

    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup Github cache for conan
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-${{ matrix.config.compiler }}-conan-cache-${{ hashFiles('**/conanfile.txt') }}
        path: |
          ~/.conan

    - name: Setup compiler cache (ccache)
      uses: hendrikmuhs/ccache-action@v1.2.2

    - name: Configuration and build
      run: |
        ccache --zero-stats
        cmake --preset ${{ env.CMAKE_PRESET }}
        cmake --build --preset ${{ env.CMAKE_PRESET }}

    - name: CCache statistics
      run: |
        ccache --show-stats

    - name: Run Unit Test
      run: |
        ctest --preset ${{ env.CMAKE_PRESET }}

    - name: Clean up conan's build & sources
      run: |
        conan remove -f "*" --builds
        conan remove -f "*" --src

  # ---------------------------------------------------------------------------
  Windows:
    name: Windows ${{ matrix.config.compiler }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image:    [ windows-latest ]
        os:       [ windows ]
        config:
        - {
            compiler: "msvc",
            vcvars:   "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat",
          }
 
    env:
      CMAKE_PRESET : ci-${{ matrix.os }}-${{ matrix.config.compiler }}

    steps:

    - name: Install basic dependencies
      run: |
        choco install ninja cmake sccache

    - name: Install conan package manager
      run: |
        python -m pip install --upgrade pip
        pip --disable-pip-version-check --no-cache-dir install wheel conan

    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup Github conan cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-${{ matrix.config.compiler }}-conan-cache-${{ hashFiles('**/conanfile.txt') }}
        path: |
          C:\\Users\\runneradmin\\.conan
          C:\\.conan

    - name: Setup compiler cache (sccache)
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-${{ matrix.config.compiler }}-sccache
        path: |
          C:\\Users\\runneradmin\\AppData\\Local\\Mozilla\\sccache

    - name: Configuration and build on Windows
      shell: cmd
      run: |
        sccache --zero-stats
        call "${{ matrix.config.vcvars }}"
        cmake --preset ${{ env.CMAKE_PRESET }}
        cmake --build --preset ${{ env.CMAKE_PRESET }}

    - name: SCCache statistics
      run: |
        sccache --show-stats && sccache --stop-server

    - name: Run Unit Test
      run: |
        ctest --preset ${{ env.CMAKE_PRESET }}

    - name: Clean up conan's build & sources
      run: |
        conan remove -f "*" --builds
        conan remove -f "*" --src

  # ---------------------------------------------------------------------------
  macOS:
    name: macOS ${{ matrix.config.compiler }}
    runs-on: ${{ matrix.image }}
    #if: false # always skip job
    strategy:
      fail-fast: false
      matrix:
        image:    [ macos-12 ]
        os:       [ macos ]
        config:
        - {
            compiler: "clang",
          }

 
    env:
      CMAKE_PRESET : ci-${{ matrix.os }}-${{ matrix.config.compiler }}

    steps:

    - name: Install basic dependencies
      # Only Clang-13 shipped, see [macOS 12.4 info](
      #  https://github.com/actions/virtual-environments/blob/main/images/macos/macos-12-Readme.md)
      run: |
        brew install python3 cmake ninja sccache

    - name: Install conan package manager
      run: |
        python3 -m pip install --upgrade pip
        pip3 --disable-pip-version-check --no-cache-dir install wheel conan

    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup Github conan cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-${{ matrix.config.compiler }}-conan-cache-${{ hashFiles('**/conanfile.txt') }}
        path: |
          ~/.conan

    - name: Setup compiler cache (sccache)
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-${{ matrix.config.compiler }}-sccache
        path: |
          ~/Library/Caches/Mozilla.sccache

    - name: Configuration and build
      run: |
        sccache --zero-stats
        cmake --preset ${{ env.CMAKE_PRESET }}
        cmake --build --preset ${{ env.CMAKE_PRESET }}

    - name: SCCache statistics
      run: |
        sccache --show-stats && sccache --stop-server

    - name: Run Unit Test
      run: |
        ctest --preset ${{ env.CMAKE_PRESET }}

    - name: Clean up conan's build & sources
      run: |
        conan remove -f "*" --builds
        conan remove -f "*" --src
